/* function calculateTax(monthlyIncome, monthlyExpense){
    if(monthlyIncome < 0 || monthlyExpense < 0 || monthlyIncome < monthlyExpense){
        return 'Invalid Input'
    }
    const differenceOfTotal = monthlyIncome - monthlyExpense;
    const tax =  (differenceOfTotal * 20) / 100;
    return tax;
}

console.log(calculateTax(10000, 3000))
console.log(calculateTax(34000, 1753))
console.log(calculateTax(5000, 1500))
console.log(calculateTax(7000, 7000))
console.log(calculateTax(-5000, 2000))
console.log(calculateTax(6000, -1500)) */
/* Problem-01 : Tax Calculator
тЪая╕П Function Name Must be calculateTax()
рж╣рж╛рж░рзБржг ржПржХржЬржи рж╕ржлрж▓ рж╣рзЛржЯрзЗрж▓ ржмрзНржпржмрж╕рж╛рзЯрзАред рждрж╛рж░ рж╣рзЛржЯрзЗрж▓ ржЯрж┐ ржЕржирзЗржХ ржЬржиржкрзНрж░рж┐рзЯ рж╣рзЯрзЗ ржЙржаржЫрзЗ  ржПржмржВ ржорж╛рж╕рзЗрж░ рж╢рзЗрж╖рзЗ рждрж╛рж░ ржЖрзЯ ржУ ржЦрж░ржЪрзЗрж░ ржПржХржЯрж┐ ржкрж░рж┐рж╕рзНржХрж╛рж░ ржзрж╛рж░ржгрж╛ ржерж╛ржХрж╛ ржЦрзБржмржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржгред рждрж╛рж░ ржорж╛рж╕рж┐ржХ ржЖрзЯ ржПржмржВ ржЦрж░ржЪ ржерзЗржХрзЗ рж╕ржарж┐ржХ ржЯрзНржпрж╛ржХрзНрж╕ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗржЯ ржХрж░рждрзЗ рждрж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп рждрзБржорж┐ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи рждрзИрж░рж┐ ржХрж░ржмрзЗред
рждрзЛржорж╛рж░ ржлрж╛ржВрж╢ржиржЯрж┐ ржжрзБржЯрж┐ ржЗржиржкрзБржЯ ржирж┐ржмрзЗ:
ржорж╛рж╕рж┐ржХ ржЖрзЯ - ржПржХржЯрж┐ ржкржЬрж┐ржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ржпрж╛ рж╣рж╛рж░рзБржгрзЗрж░ ржорж╛рж╕рж┐ржХ ржЖрзЯржХрзЗ ржкрзНрж░ржХрж╛рж╢ ржХрж░рзЗред
ржорж╛рж╕рж┐ржХ ржЦрж░ржЪ - ржПржХржЯрж┐ ржкржЬрж┐ржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ржпрж╛ рж╣рж╛рж░рзБржгрзЗрж░ ржорж╛рж╕рж┐ржХ ржЦрж░ржЪржХрзЗ ржкрзНрж░ржХрж╛рж╢ ржХрж░рзЗред
ржлрж╛ржВрж╢ржиржЯрж┐ ржЖрзЯ ржПржмржВ ржЦрж░ржЪрзЗрж░ ржкрж╛рж░рзНржержХрзНржпрзЗрж░ рзирзж% рж╣рж┐рж╕рж╛ржм ржХрж░ржмрзЗ ржПржмржВ рждрж╛ ржЯрзНржпрж╛ржХрзНрж╕ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред

Input :  
ржкрзНрж░ржержо ржЗржиржкрзБржЯ:  ржПржХржЯрж┐ ржкржЬрж┐ржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ржпрж╛ ржорж╛рж╕рж┐ржХ ржЖрзЯред (0<=income )
ржжрзНржмрж┐рждрзАрзЯ ржЗржиржкрзБржЯ: ржПржХржЯрж┐ ржкржЬрж┐ржЯрж┐ржн рж╕ржВржЦрзНржпрж╛ ржпрж╛ ржорж╛рж╕рж┐ржХ ржЦрж░ржЪред  (0<=expense )
Income рж╕ржмрж╕ржорзЯ expense ржерзЗржХрзЗ рж╕ржорж╛ржи ржмрж╛  ржмрзЗрж╢рж┐ рж╣ржмрзЗред  (income >=expense)
Output :   ржлрж╛ржВрж╢ржиржЯрж┐ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗржЯрзЗржб ржЯрзНржпрж╛ржХрзНрж╕ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред Output ржжрж╢ржорж┐ржХ рж╕ржВржЦрзНржпрж╛ ржУ рж╣рждрзЗ ржкрж╛рж░рзЗред
Hints ЁЯТб:  income 10000 ржЯрж╛ржХрж╛ ржПржмржВ expense 3000 ржЯрж╛ржХрж╛ рж╣рж▓рзЗ рждрж╛ржБрж░ ржЖрзЯ ржПржмржВ ржЦрж░ржЪрзЗрж░ ржкрж╛рж░рзНржерзНржпржХрзНржп рж╣ржмрзЗ 
10000-3000 = 7000 ржЯрж╛ржХрж╛ред  рж╕рзБрждрж░рж╛ржВ рждрж╛рж░ ржЯрзНржпрж╛ржХрзНрж╕ рж╣ржмрзЗ (7000 * .20)  =1400  ржЯрж╛ржХрж╛ред  
 */

// Solution 1
// function sendNotification(email){
//     if(!email.includes('@')){
//         return 'Invalid Email'
//     }
//     const divideMail = email.split('@');

//         return `${divideMail[0]} sent you an email from ${divideMail[1]}`

// }

// console.log(sendNotification('zihad@gmail.com'));
// console.log(sendNotification('farhan34@yahoo.com'));
// console.log(sendNotification('nadim.naem5@outlook.com'));
// console.log(sendNotification('fahim234@hotmail.com'));
// console.log(sendNotification('sadiaa8icloud.com'));

// soltion 2

// function sendNotification(email) {
//   const newEmail = email.split("@");
//   /*     const message = email.includes('@') ? `${newEmail[0]} sent an email from ${newEmail[1]}` : 'Invalid'
//     return message */
//   const message =
//     email.indexOf("@") !== -1
//       ? `${newEmail[0]} sent an email from ${newEmail[1]}`
//       : "Invalid";
//   return message;
// }

/* console.log(sendNotification('zihad@gmail.com'));
console.log(sendNotification('farhan34@yahoo.com'));
console.log(sendNotification('nadim.naem5@outlook.com'));
console.log(sendNotification('fahim234@hotmail.com'));
console.log(sendNotification('sadiaa8icloud.com')); 
 */
/* Problem 02 : Notification Generator
тЪая╕П Function Name Must be sendNotification()
рждрзЛржорж░рж╛ ржЬрж╛ржирзЛ, ржПржХржЯрж┐ ржЗржорзЗрж▓ рзиржЯрж┐ ржЕржВрж╢ ржирж┐рзЯрзЗ ржЧржарж┐ржд рж╣рзЯ, ржПржХржЯрж┐ рж╣рж▓ `username` ржЕржирзНржпржЯрж┐ `domain name`ред ржпрзЗржоржи zihad.ph@gmail.com ржПржЦрж╛ржирзЗ zihad.ph рж╣рж▓рзЛ ржЗржЙржЬрж╛рж░ ржирзЗржЗржо,  gmail.com рж╣рж▓рзЛ ржбрзЛржорзЗржЗржи ржирзЗржЗржоред  рждрзЛржорж╛ржХрзЗ ржПржоржи ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржмрж╛ржирж╛рждрзЗ рж╣ржмрзЗ ржпрж╛ input рж╣рж┐рж╕рзЗржмрзЗ ржПржХржЯрж╛ email ржирж┐ржмрзЗред  ржлрж╛ржВрж╢ржирзЗрж░ ржХрж╛ржЬ рж╣ржмрзЗ, ржЗржорзЗржЗрж▓рзЗ ржерж╛ржХрж╛ `username` ржУ `domain  name` ржЖржВрж╢ ржЧрзБрж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ, ржПржХржЯрж┐ notification message рждрзИрж░рж┐ ржХрж░рж╛ред  
ржлрж╛ржВрж╢ржиржЯрж┐ ржПржХржЯрж┐ ржирждрзБржи string рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржпрзЗржЦрж╛ржирзЗ ржЗржорзЗрж▓рзЗ ржерж╛ржХрж╛ `username` ржУ `domain name` ржЕржВрж╢ рзиржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ notification  ржПрж░ ржЬржирзНржп ржорзЗрж╕рзЗржЬ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╣ржмрзЗ ред  Output ржХрж┐ рж╣ржмрзЗ рж╕рзЗржЯрж╛ ржирж┐ржЪрзЗ  ржнрж╛рж▓ ржХрж░рзЗ ржжрзЗржЦрзЛред  
Input :  ржЗржиржкрзБржЯ рж╣ржмрзЗ ржПржХржЯрж┐ string, ржпрж╛ рж╣ржмрзЗ ржПржХржЯрж┐ ржЗржорзЗржЗрж▓ (ржпрзЗржоржи, zihad@gmail.com) 
@ ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ ржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржП ржПржХржмрж╛рж░ ржЗ ржерж╛ржХржмрзЗред ржПржЯрж╛  userName  ржПржмржВ DomainName  ржПрж░ ржорж╛ржЭржЦрж╛ржирзЗ ржЗ ржерж╛ржХржмрзЗред  


Output: zihad.ph@gmail.com ржПржЗ ржЗржорзЗржЗрж▓рзЗрж░ ржЬржирзНржпрзЗ ржЖржЙржЯржкрзБржЯ ржЯрж┐ рж╣ржмрзЗ ржарж┐ржХ ржПрж░ржХржоред 
zihad.ph sent you an email from gmail.com


Challenge ЁЯУв : ржпржжрж┐ ржЗржиржкрзБржЯржЯрж┐ ржПржХржЯрж┐ valid email ржирж╛ рж╣рзЯ ржЕрж░рзНржерж╛рзО ржЗржорзЗржЗрж▓рзЗ @ ржирж╛ ржерж╛ржХрзЗ рждрж╛рж╣рж▓рзЗ ржПржХржЯрж┐ ржПрж░рзЛрж░ ржорзЗрж╕рзЗржЬ "Invalid Email" рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред  

  
Hints ЁЯТб:  split() , indexOf() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЛред 
 */

/* function checkDigitsInName(name){
    if(typeof name !== 'string'){
        return 'Invalid Input'
    }
    for (const elements of name) {
        if(!isNaN(elements)){
            return 'true';
        }
        
    }
    return false;
}

 */

/* 
Problem-03: Checking Digits Inside a Name
тЪая╕П Function Name Must be checkDigitsInName()
рж░рж╛ржЬрзБ ржкрж╛рж╕ржкрзЛрж░рзНржЯ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗрж░ ржЬржирзНржпрзЗ ржирждрзБржи ржПржХржЯрж╛ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржмрж╛ржирж┐рзЯрзЗржЫрзЗред  рж╕рзЗржЦрж╛ржирзЗ ржЕржирзЗржХрзЗржЗ ржирж╛ржо ржЗржиржкрзБржЯ ржжрзЗрзЯрж╛рж░ рж╕ржорзЯ  ржирж╛ржорзЗрж░ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐  ржмрж┐ржнрж┐ржирзНржи ржирж╛ржорзНржмрж╛рж░ ржнрзБрж▓ ржХрж░рзЗ ржжрж┐рзЯрзЗ ржлрзЗрж▓ржЫрзЗред ржпрзЗржЯрж╛ рж░рж╛ржЬрзБ ржПржХржжржо ржЗ ржЪрж╛рзЯржирж╛ред  рждрж╛ржЗ рж░рж╛ржЬрзБржХрзЗ рждрзЛржорж╛рж░ рж╣рзЗрж▓рзНржк ржХрж░рждрзЗ рж╣ржмрзЗред рждрзБржорж┐ checkDigitsInName() ржирж╛ржорзЗ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи рж▓рж┐ржЦржмрзЗ ржпрж╛ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ржПржмржВ ржирж╛ржорзЗрж░ ржоржзрзНржпрзЗ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ ржЖржЫрзЗ ржХрж┐ржирж╛ рждрж╛ ржЪрзЗржХ ржХрж░ржмрзЗред 
ржпржжрж┐ ржирж╛ржорзЗрж░ ржнрж┐рждрж░рзЗ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ true рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред ржпржжрж┐ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ ржирж╛ ржерж╛ржХрзЗ, рждржмрзЗ false  рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред ржЗржиржкрзБржЯ ржпржжрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржирж╛ рж╣ржпрж╝, рждржмрзЗ Invalid Input рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред
Input :  ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗржмрзЗред 


Output :  ржПржЯрж╛  рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж╛ ржмрзБрж▓рж┐рзЯрж╛ржи ржнрзНржпрж╛рж▓рзБ  : true / false
ржпржжрж┐ ржирж╛ржорзЗрж░ ржнрж┐рждрж░рзЗ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ true рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред ржпржжрж┐ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ ржирж╛ ржерж╛ржХрзЗ, рждржмрзЗ false  рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред 


Challenge ЁЯУв : ржЗржиржкрзБржЯ ржпржжрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржмрж╛ржжрзЗ ржЕржирзНржп ржХрж┐ржЫрзБ рж╣ржпрж╝, рждржмрзЗ "Invalid Input" рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред
 */

// function calculateFinalScore(info) {
//   if (
//     typeof info !== "object" ||
//     typeof info.name !== "string" ||
//     typeof info.testScore !== "number" ||
//     typeof info.schoolGrade !== "number" ||
//     typeof info.isFFamily !== "boolean"
//   ) {
//     return "Invalid Input";
//   }

//   return info.testScore + info.schoolGrade + (info.isFFamily ? 20 : 0) >= 80;

//   /*   const parentProfessionFarmer = 20;

//     let total = info.testScore + info.schoolGrade;

//     if(info.isFFamily === true){
//         total += parentProfessionFarmer;
//     }

//     return total >= 80 */
// }

/* const information = {
     name: "Rajib",
     testScore: 45,
     schoolGrade: 25,
     isFFamily : true
}

console.log(calculateFinalScore(information));
console.log(calculateFinalScore({ name: "Rajib", testScore: 45,  schoolGrade: 25, isFFamily : false }));
console.log(calculateFinalScore("hello"));
console.log(calculateFinalScore({ name: "Rajib", testScore: 15,  schoolGrade: 25, isFFamily : true  }));
 */

/* Problem 04 : Calculate Admission Final Score 
тЪая╕П Function Name Must be calculateFinalScore()
рж░рж╛ржХрж┐ржм ржПржХржЯрж┐ рж╕ржлржЯржУржпрж╝рзНржпрж╛рж░ ржХрзЛржорзНржкрж╛ржирж┐рждрзЗ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░ рж╣рж┐рж╕рзЗржмрзЗ ржХрж╛ржЬ ржХрж░ржЫрзЗржиред рждрж╛рж░ ржЫрзЛржЯ ржнрж╛ржЗ, рж░рж╛ржЬрж┐ржм, ржПржХржЯрж┐ ржмрж┐ржЦрзНржпрж╛ржд ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓ржпрж╝рзЗ ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛ ржжрж┐ржпрж╝рзЗржЫрзЗред ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рж░ ржлрж▓рж╛ржлрж▓ ржмрж┐ржнрж┐ржирзНржи ржорж╛ржиржжржгрзНржбрзЗрж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ ржирж┐рж░рзНржзрж╛рж░рж┐ржд рж╣ржмрзЗред рж░рж╛ржЬрж┐ржмрзЗрж░ ржкрж░рзАржХрзНрж╖рж╛рж░ рж╕рзНржХрзЛрж░, рж╕рзНржХрзБрж▓рзЗрж░ ржЧрзНрж░рзЗржб, ржПржмржВ ржЕржнрж┐ржнрж╛ржмржХрзЗрж░ ржкрзНрж░рзЛржлрзЗрж╢ржи (ржпржжрж┐ "farmer" рж╣ржпрж╝) рж╕ржмржХрж┐ржЫрзБ ржорж┐рж▓рж┐ржпрж╝рзЗ рждрж╛рж░ ржлрж╛ржЗржирж╛рж▓ рж╕рзНржХрзЛрж░ ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗредрждрзБржорж┐ ржпрзЗрж╣рзЗрждрзБ рж░рж╛ржХрж┐ржмрзЗрж░ рж╕рж╣ржХрж░рзНржорзА ржПржмржВ ржнрж╛рж▓рзЛ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░, рждрж╛ржЗ рж░рж╛ржХрж┐ржм ржЪрж╛ржпрж╝ рждрзБржорж┐ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи calculateFinalScore() ржмрж╛ржирж┐ржпрж╝рзЗ ржжрж╛ржУ, ржпрж╛ рж░рж╛ржЬрж┐ржмрзЗрж░ ржмрж┐ржнрж┐ржирзНржи рждржерзНржп ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирж┐ржпрж╝рзЗ ржлрж╛ржЗржирж╛рж▓ рж╕рзНржХрзЛрж░ ржмрзЗрж░ ржХрж░ржмрзЗред ржлрж╛ржЗржирж╛рж▓ рж╕рзНржХрзЛрж░ ржпржжрж┐ рзорзж ржмрж╛ рждрж╛рж░ ржмрзЗрж╢рж┐ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ рж╕рзЗ ржнрж░рзНрждрж┐ рж╣рждрзЗ ржкрж╛рж░ржмрзЗред ржЕржирзНржпржерж╛ржпрж╝, рж╕рзЗ ржнрж░рзНрждрж┐ рж╣рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред 
Scoring Criteria
testScore:  рзлрзж ржкржпрж╝рзЗржирзНржЯ рж╕рж░рзНржмрзЛржЪрзНржЪ
schoolGrade : рзйрзж ржкржпрж╝рзЗржирзНржЯ рж╕рж░рзНржмрзЛржЪрзНржЪ
Parent Profession: ржпржжрж┐ "farmer" рж╣ржпрж╝, рзирзж ржкржпрж╝рзЗржирзНржЯ

Input :  ржПржХржЯрж┐ ржЕржмрзНржЬрзЗржХрзНржЯ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗржмрзЗред  ржЕржмржЬрзЗржХрзНржЯ ржП ржЕржмрж╢рзНржпржЗ name,  testScore, schoolGrade, isFFamily ржкрзНрж░рзЛржкрж╛рж░рзНржЯрж┐ ржЧрзБрж▓рзЛ ржерж╛ржХржмрзЗред  ржпрзЗржЦрж╛ржирзЗ 
typeof name = string 
typeof testScore= number ( testScore <= 50) 
typeof schoolGrade = number ( schoolGrade <=30) 
typeof  isFFamily = boolean


Output :  ржПржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ ржПржХржЯрж╛ ржмрзБрж▓рж┐рзЯрж╛ржи ржнрзНржпрж╛рж▓рзБ : true / false


Challenge ЁЯУв:  ржпржжрж┐ ржЗржиржкрзБржЯ ржЯрж┐ ржЕржмрзНржЬрзЗржХрзНржЯ ржирж╛ рж╣рзЯ рждрж╛рж╣рж▓рзЗ ржПржХржЯрж┐ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржжрзЗржмрзЗ ржПржХржЯрж┐  "Invalid Input"

 */

/* function waitingTime(doneArray, isratSerial){
    if(!Array.isArray(doneArray) || typeof isratSerial !== 'number'){
        return 'Invalid Input'
    }
    let sum = 0;
    for (const arr of doneArray) {
        sum += arr;
    }
    const avg =Math.round(sum / doneArray.length) ;
    const remaininginterviewees = (isratSerial - 1) - doneArray.length;
    const isratWait = avg * remaininginterviewees;
    return isratWait;
}

let array = [ 3, 5, 7, 11, 6 ];
let serialNumber = 10;
console.log(waitingTime(array, serialNumber));
console.log(waitingTime([13, 2], 6));
console.log(waitingTime([13, 2, 6, 7, 10], 6));
console.log(waitingTime([6], 4));
console.log(waitingTime(7 , 10));
console.log(waitingTime("[6,2]", 9));
console.log(waitingTime([7, 8, 3, 4, 5], "9"));
 */
/* Problem 05:  Predict Avarage Waiting Time 
тЪая╕П Function Name Must be waitingTime()
ржЗрж╕рж░рж╛ржд ржПржХржЯрж┐ ржЪрж╛ржХрж░рж┐рж░ ржЗржирзНржЯрж╛рж░ржнрж┐ржЙрзЯрзЗрж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗред рждрж╛рж░ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржЖрж╕рж▓рзЗ рждрж╛ржХрзЗ ржбрж╛ржХрж╛ рж╣ржмрзЗред  ржжрзЗрзЯрж╛рж▓рзЗ ржПржХржЯрж╛ рж╕рзНржХрзНрж░рж┐ржирзЗ ржпрж╛рж░рж╛ ржпрж╛рж░рж╛ ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржжрж┐рзЯрзЗржЫрзЗ рждрж╛ржжрзЗрж░ рж▓рж┐рж╕рзНржЯ ржПржмржВ  ржкрзНрж░рждрзНржпрзЗржХрзЗрж░ ржХржд ржорж┐ржирж┐ржЯ рж╕ржорзЯ рж▓рзЗржЧрзЗржЫрзЗ рждрж╛ ржжрзЗржЦрж╛ржЪрзНржЫрзЗред  ржЗрж╕рж░рж╛ржд ржмрзБржЭрждрзЗ ржкрж╛рж░ржЫрзЗржирж╛ ржпрзЗ рждрж╛ржБрж░ ржЖрж╕рж▓рзЗ ржЖрж░ ржХрждржХрзНрж╖ржи рж╕ржорзЯ рж▓рж╛ржЧржмрзЗред  рждрзЛржорж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ ржЗрж╕рж░рж╛рждрзЗрж░ ржЖрж░ ржХржд рж╕ржорзЯ рж▓рж╛ржЧржмрзЗ рждрж╛ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗрж╢ржи ржХрж░рзЗ ржмрзЗрж░ ржХрж░рж╛рж░ ржЬржирзНржп waitingTime() ржирж╛ржорзЗ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи рждрзИрж░рж┐ ржХрж░рж╛ред 
ржлрж╛ржВрж╢ржи ржЯрж┐ рзи ржЯрж╛ input ржирзЗржмрзЗ ред  рззржо ржЯрж┐ рж╣ржЪрзНржЫрзЗ  ржПржХржЯрж╛ number ржПрж░ Array ред  ржпрж╛ржжрзЗрж░ ржнрж╛ржЗржнрж╛ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ рждрж╛ржжрзЗрж░  ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржЯрж╛ржЗржоред рзирзЯ  ржЯрж┐ рж╣ржЪрзНржЫрзЗ ржЗрж╕рж░рж╛рждрзЗрж░ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржирж╛ржорзНржмрж╛рж░ред  ржлрж╛ржВрж╢ржи ржЯрж┐ ржпрж╛ржжрзЗрж░ ржнрж╛ржЗржнрж╛ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ рждрж╛ржжрзЗрж░ рж╕ржорзЯрзЗрж░ ржПржХржЯрж╛ ржПржнрж╛рж░рзЗржЬ ржмрзЗрж░ ржХрж░ржмрзЗ ржПржмржВ ржмрж░рзНрждржорж╛ржи рж╕рж┐рж░рж┐рзЯрж╛рж▓рзЗрж░ ржкрж░ ржерзЗржХрзЗ  ржЗрж╕рж░рж╛рждрзЗрж░ ржЖрж░ ржХржд рж╕ржорзЯ рж▓рж╛ржЧржмрзЗ рж╕рзЗржЯрж╛ ржмрзЗрж░ ржХрж░ржмрзЗ ржПржмржВ ржЖржЙржЯржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред  
Input :  ржлрж╛ржВрж╢ржи ржЯрж┐ рзи ржЯрж┐ ржЗржиржкрзБржЯ ржирзЗржмрзЗ ,  
ржПржХржЯрж┐ рж╣рж▓рзЛ Array ( ржпрж╛ржжрзЗрж░ ржнрж╛ржЗржнрж╛ рж╣рзЯрзЗржЫрзЗ рждрж╛ржжрзЗрж░ рж╕ржорзЯ )  , ржЕржирзНржпржЯрж┐ рж╣рж▓рзЛ  ржЗрж╕рж░рж╛рждрзЗрж░ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржирж╛ржорзНржмрж╛рж░ред
Serial Number >  length of array 


Output : 
ржпрж╛ржжрзЗрж░ ржнрж╛ржЗржнрж╛ рж╣рзЯрзЗржЫрзЗ рждрж╛ржжрзЗрж░ рж░рж╛ржЙржирзНржбрзЗржб ржПржнрж╛рж░рзЗржЬ ржмрзЗрж░ ржХрж░рзЛред  ржЗрж╕рж░рж╛рждрзЗрж░ ржЖржЧрзЗ ржЖрж░ ржХрзЯржЬржи ржмрж╛ржХрзА ржЖржЫрзЗ рждрж╛ ржмрзЗрж░ ржХрж░ред  ржПржмржВ ржПржЗ ржжрзБржЯрзЛ ржЬрж┐ржирж┐рж╕  ржжрж┐рзЯрзЗ ржЗрж╕рж░рж╛рждрзЗрж░ waiting time ржмрзЗрж░ ржХрж░рзЗ рж╕рзЗржЯрж╛ржХрзЗ return ржХрж░рзЗ ржжрж╛ржУред   
Example:  array =   , serial Number = 10
рждрж╛рж╣рж▓рзЗ ржПржЦрж╛ржирзЗ 5 ржЬржирзЗрж░   ржПржнрж╛рж░рзЗржЬ ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржЯрж╛ржЗржо рж╣рж▓рзЛ 6 minute (rounded)
ржИрж╕рж░рж╛рждрзЗрж░ рж╕рж┐рж░рж┐рзЯрж╛рж▓ ржирж╛ржорзНржмрж╛рж░ рззрзж ржПрж░ ржорж╛ржирзЗ рж╣рж▓рзЛ ржпрзЗ рждрж╛ржБрж░ ржЖржЧрзЗ ржЖржЫрзЗ 10-1 = 9 ржЬржиред  
ржпрзЗрж╣рзЗрждрзБ рзл ржЬржирзЗрж░ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ рж╕рзЗрж╣рзЗрждрзБ ржЗрж╕рж░рж╛рждрзЗрж░ ржЖржЧрзЗ ржЖрж░ ржнрж╛ржЗржмрж╛ ржмрж╛ржХрзА ржЖржЫрзЗ  4 ржЬржирзЗрж░ред ржПржмрж╛рж░ рждрзБржорж┐ ржЗ ржмрж▓рзЛ ржпрзЗ ржЗрж╕рж░рж╛рждрзЗрж░ ржХржд рж╕ржорзЯ рж▓рж╛ржЧржмрзЗ?   


Challenge ЁЯУв : ржпржжрж┐ ржкрзНрж░ржержо ржЗржиржкрзБржЯ Array ржирж╛ рж╣рзЯ ржПржмржВ рзирзЯ ржЗржиржкрзБржЯ ржпржжрж┐ ржирж╛ржорзНржмрж╛рж░ ржирж╛ рж╣рзЯ рждрж╛рж╣рж▓рзЗ Invalid Input рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред


 */
